#!/bin/bash

# Script para configurar el entorno de herramientas Docker para SecOps MCP
# Este script crea los directorios necesarios y limpia contenedores antiguos

echo "üîß Configurando entorno para herramientas Docker de SecOps MCP..."

# Crear directorios de datos si no existen
echo "üìÅ Creando directorios de datos..."
mkdir -p data/{nuclei/{templates,config},ffuf/wordlists,sqlmap/output,amass/config,hashcat/{wordlists,hashes},dirsearch/wordlists}

# Limpiar contenedores antiguos si existen
echo "üßπ Limpiando contenedores antiguos..."
docker ps -a --filter "name=secops-" --format "{{.ID}}" | xargs -r docker rm -f

# Verificar que Docker est√© funcionando
echo "üê≥ Verificando Docker..."
if ! docker info > /dev/null 2>&1; then
    echo "‚ùå Error: Docker no est√° funcionando. Por favor, inicia Docker y vuelve a intentar."
    exit 1
fi

# Descargar im√°genes Docker necesarias
echo "‚¨áÔ∏è Descargando im√°genes Docker..."
docker pull projectdiscovery/nuclei:latest
docker pull trickest/ffuf:latest
docker pull uzyexe/nmap:latest
docker pull googlesky/sqlmap:latest
docker pull wpscanteam/wpscan:latest
docker pull owaspamass/amass:latest
docker pull javydekoning/hashcat:latest
docker pull projectdiscovery/httpx:latest
docker pull projectdiscovery/subfinder:latest
docker pull projectdiscovery/tlsx:latest
# Nota: Estas im√°genes no est√°n disponibles p√∫blicamente, usaremos alternativas
echo "‚ö†Ô∏è  Nota: Dirsearch y XSStrike no est√°n disponibles p√∫blicamente"
echo "   Usando alternativas: FFUF para directorios y Nuclei para XSS"

# Generar wordlists por defecto para compatibilidad con n8n
echo ""
echo "üìù Generando wordlists por defecto..."
./scripts/generate-default-wordlists.sh

echo ""
echo "‚úÖ Configuraci√≥n completada!"
echo ""
echo "üìã Herramientas disponibles:"
echo "  ‚Ä¢ Nuclei (vulnerabilidades): docker run --rm projectdiscovery/nuclei:latest"
echo "  ‚Ä¢ FFUF (fuzzing web): docker run --rm trickest/ffuf:latest"
echo "  ‚Ä¢ Nmap (escaneo de red): docker run --rm --cap-add=NET_RAW --cap-add=NET_ADMIN uzyexe/nmap:latest"
echo "  ‚Ä¢ SQLMap (inyecci√≥n SQL): docker run --rm googlesky/sqlmap:latest"
echo "  ‚Ä¢ WPScan (WordPress): docker run --rm wpscanteam/wpscan:latest"
echo "  ‚Ä¢ Amass (subdominios): docker run --rm owaspamass/amass:latest enum -d example.com"
echo "  ‚Ä¢ Hashcat (cracking): docker run --rm javydekoning/hashcat:latest"
echo "  ‚Ä¢ HTTPX (probe HTTP): docker run --rm projectdiscovery/httpx:latest"
echo "  ‚Ä¢ Subfinder (subdominios): docker run --rm projectdiscovery/subfinder:latest"
echo "  ‚Ä¢ TLSX (an√°lisis TLS): docker run --rm projectdiscovery/tlsx:latest"
echo "  ‚Ä¢ Dirsearch (directorios): docker run --rm maurosoria/dirsearch:latest"
echo "  ‚Ä¢ XSStrike (XSS): docker run --rm s0md3v/xsstrike:latest"
echo ""
echo "üöÄ Las herramientas ahora se ejecutar√°n con 'docker run' cuando se invoquen desde el MCP."
